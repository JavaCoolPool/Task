<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.task.job.dao.JobRunLogMapper" >
  <resultMap id="BaseResultMap" type="com.task.job.dao.JobRunLog" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="JOB_CONFIG_ID" property="jobConfigId" jdbcType="INTEGER" />
    <result column="JOB_GROUP" property="jobGroup" jdbcType="VARCHAR" />
    <result column="JOB_NAME" property="jobName" jdbcType="VARCHAR" />
    <result column="START_TIME" property="startTime" jdbcType="TIMESTAMP" />
    <result column="END_TIME" property="endTime" jdbcType="TIMESTAMP" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="CREATED_AT" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="CREATED_BY" property="createdBy" jdbcType="VARCHAR" />
    <result column="UPDATED_AT" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="UPDATED_BY" property="updatedBy" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, JOB_CONFIG_ID, JOB_GROUP, JOB_NAME, START_TIME, END_TIME, STATUS, REMARK, CREATED_AT, 
    CREATED_BY, UPDATED_AT, UPDATED_BY
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from KERNEL_JOB_RUN_LOG
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from KERNEL_JOB_RUN_LOG
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.task.job.dao.JobRunLog" useGeneratedKeys="true" keyProperty="id" >
    insert into KERNEL_JOB_RUN_LOG (JOB_CONFIG_ID, JOB_GROUP, JOB_NAME, 
      START_TIME, END_TIME, STATUS, 
      REMARK, CREATED_AT, CREATED_BY, 
      UPDATED_AT, UPDATED_BY)
    values (#{jobConfigId,jdbcType=INTEGER}, #{jobGroup,jdbcType=VARCHAR}, #{jobName,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.task.job.dao.JobRunLog" useGeneratedKeys="true" keyProperty="id" >
    insert into KERNEL_JOB_RUN_LOG
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="jobConfigId != null" >
        JOB_CONFIG_ID,
      </if>
      <if test="jobGroup != null" >
        JOB_GROUP,
      </if>
      <if test="jobName != null" >
        JOB_NAME,
      </if>
      <if test="startTime != null" >
        START_TIME,
      </if>
      <if test="endTime != null" >
        END_TIME,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="createdAt != null" >
        CREATED_AT,
      </if>
      <if test="createdBy != null" >
        CREATED_BY,
      </if>
      <if test="updatedAt != null" >
        UPDATED_AT,
      </if>
      <if test="updatedBy != null" >
        UPDATED_BY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="jobConfigId != null" >
        #{jobConfigId,jdbcType=INTEGER},
      </if>
      <if test="jobGroup != null" >
        #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null" >
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        #{updatedBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.task.job.dao.JobRunLog" >
    update KERNEL_JOB_RUN_LOG
    <set >
      <if test="jobConfigId != null" >
        JOB_CONFIG_ID = #{jobConfigId,jdbcType=INTEGER},
      </if>
      <if test="jobGroup != null" >
        JOB_GROUP = #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null" >
        JOB_NAME = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        START_TIME = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        END_TIME = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        CREATED_BY = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null" >
        UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null" >
        UPDATED_BY = #{updatedBy,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.task.job.dao.JobRunLog" >
    update KERNEL_JOB_RUN_LOG
    set JOB_CONFIG_ID = #{jobConfigId,jdbcType=INTEGER},
      JOB_GROUP = #{jobGroup,jdbcType=VARCHAR},
      JOB_NAME = #{jobName,jdbcType=VARCHAR},
      START_TIME = #{startTime,jdbcType=TIMESTAMP},
      END_TIME = #{endTime,jdbcType=TIMESTAMP},
      STATUS = #{status,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
      CREATED_BY = #{createdBy,jdbcType=VARCHAR},
      UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},
      UPDATED_BY = #{updatedBy,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectBySelective" parameterType="com.shhxzq.kernel.schedule.model.JobConfig" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from kernel_job_run_log
    <where>
      <if test="jobName != null">
        and job_name = #{jobName,jdbcType=VARCHAR}
      </if>
      <if test="jobGroup != null">
        and job_group = #{jobGroup,jdbcType=VARCHAR}
      </if>
      <if test="status != null" >
        and status = #{status,jdbcType=VARCHAR}
      </if>
      <if test="createdBy != null" >
        and created_by = #{createdBy,jdbcType=VARCHAR}
      </if>
      <if test="updatedBy != null" >
        and updated_by = #{updatedBy,jdbcType=VARCHAR}
      </if>
    </where>
  </select>

  <delete id="cleanup">
    <![CDATA[ delete from kernel_job_run_log where created_at < DATE_SUB(created_at,INTERVAL 7 day) ]]>
  </delete>
  
  
</mapper>